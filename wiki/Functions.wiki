#summary Functions provided by BSFL

= Introduction =

This wiki page will be updated with information about which functions are provided and how to use them.

= Details =

== Status Codes ==

  * OK
  * SUCCESS
  * ERROR
  * FAILURE
  * FAILED
  * WARNING
  * INFO
  * NOTICE

== Colour Codes ==

=== Foreground colours ===

  * BLUE
  * RED
  * YELLOW
  * GREEN
  * CYAN
  * MAGENTA
  * BOLD
  * DEFAULT

=== Background colours ===

  * BLUE_BG
  * RED_BG
  * YELLOW_BG
  * GREEN_BG
  * CYAN_BG
  * MAGENTA_BG

== Variables == 

LOGFILE (override this variable in your script to specify your own logfile name.)

== Functions ==

== msg ===

The function msg displays a message with the desired markup. The function has three arguments:

# The message (mandatory)
# The colour of the message  (mandatory)
# The status of the message (optional)

Example:

{{
msg "This is just a test message in green." "$GREEN" OK
or
msg "Another message in red with no status." "$RED"
or
msg "A message with the default colour." 

}}

=== log ===

Usage: 

{{{
log <program> <type> <message>
}}}

  * Program: function-name or command of which the output is logged.
  * Type: status code.
  * Message: arbitrary text.

=== exec_cmd ===

Description:

This function executes a command and evaluates the exit-status. If an error occurs, this is logged on-screen and to a log file. 

Usage:

{{{
exec_cmd <some command>

e.g.

exec_cmd "ls -al"
}}}

=== isset ===

This function checks if a variable is empty (unset) or not. If so, it returns 1, if set, it returns 0. Great for checking command-line arguments. 

=== exists ===

This function checks if the supplied file or directory actually exists. Great for checking command-line arguments. 